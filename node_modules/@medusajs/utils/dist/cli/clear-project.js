"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clearProject = void 0;
var fs_1 = __importDefault(require("fs"));
var glob_1 = __importDefault(require("glob"));
var path_1 = __importDefault(require("path"));
function clearProject(directory) {
    var adminFiles = glob_1.default.sync(path_1.default.join(directory, "src", "admin/**/*"));
    var onboardingFiles = glob_1.default.sync(path_1.default.join(directory, "src", "**/onboarding/"));
    var typeFiles = glob_1.default.sync(path_1.default.join(directory, "src", "types"));
    var srcFiles = glob_1.default.sync(path_1.default.join(directory, "src", "**/*.{ts,tsx,js,jsx}"));
    var files = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], adminFiles, true), onboardingFiles, true), typeFiles, true), srcFiles, true);
    files.forEach(function (file) {
        return fs_1.default.rmSync(file, {
            recursive: true,
            force: true,
        });
    });
    // add empty typescript file to avoid build errors
    fs_1.default.openSync(path_1.default.join(directory, "src", "index.ts"), "w");
}
exports.clearProject = clearProject;
//# sourceMappingURL=clear-project.js.map